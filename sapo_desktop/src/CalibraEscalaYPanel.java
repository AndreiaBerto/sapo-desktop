
import javax.swing.JOptionPane;

/*
 * CalibraEscalaYPanel.java
 *
 * Created on 8 de Fevereiro de 2005, 01:41
 */

/**
 *
 * @author Edison Puig Maldonado
 */

public class CalibraEscalaYPanel extends javax.swing.JPanel {
    
    /**
	 * 
	 */
	private static final long serialVersionUID = -4906007814586492707L;
	SAPO sapo;
    
    /** Creates new form CalibraEscalaYPanel */
    public CalibraEscalaYPanel(SAPO sapo) {
        this.sapo = sapo;
        initComponents();
    }
    
    private void aplicaEscalaY() {
        float scX, scY;
        scX = scY = sapo.jif[sapo.numImg].zoom / 100.0F;
        try {
            int X1 = Integer.parseInt(jlCEYX1.getText());
            int Y1 = Integer.parseInt(jlCEYY1.getText());
            int X2 = Integer.parseInt(jlCEYX2.getText());
            int Y2 = Integer.parseInt(jlCEYY2.getText());
            double dist = Math.sqrt(Math.pow(((X2-X1)/scX),2) + Math.pow(((Y2-Y1)/scY),2));
            sapo.paciente.dados.imgData[sapo.numImg].setEscalaX(sapo.doubleLoc(jtfEY.getText())/dist);
            jlCEY8.setText("definido");
            sapo.paciente.escreveDB();
            sapo.paciente.salvarAlteracoes = false;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(sapo,
                    "Erro aritmético !",
                    "Erro", JOptionPane.PLAIN_MESSAGE);
        }
    }
    
    public void limpar() {
        jlCEYX1.setText("");
        jlCEYY1.setText("");
        jlCEYX2.setText("");
        jlCEYY2.setText("");
        jlCEY8.setText("");
        sapo.jif[sapo.numImg].jaiP.resetMousePosition();
        sapo.jif[sapo.numImg].jaiP.repaint();
        //        calEscX.iniciar();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jpCalEscalaY = new javax.swing.JPanel();
        jlCEY1 = new javax.swing.JLabel();
        jlCEY2 = new javax.swing.JLabel();
        jlCEY3 = new javax.swing.JLabel();
        jlCEY4 = new javax.swing.JLabel();
        jlCEY5 = new javax.swing.JLabel();
        jlCEY6 = new javax.swing.JLabel();
        jlCEY7 = new javax.swing.JLabel();
        jpnCEY = new javax.swing.JPanel();
        jlCEYX = new javax.swing.JLabel();
        jlCEYY = new javax.swing.JLabel();
        jlCEYX1 = new javax.swing.JLabel();
        jlCEYY1 = new javax.swing.JLabel();
        jlCEYX2 = new javax.swing.JLabel();
        jlCEYY2 = new javax.swing.JLabel();
        jtfEY = new javax.swing.JTextField();
        jbCEYAplicar = new javax.swing.JButton();
        jlCEY8 = new javax.swing.JLabel();
        jbCEYClear = new javax.swing.JButton();
        jbCEYOk = new javax.swing.JButton();
        jbCEYAjuda = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jpCalEscalaY.setLayout(new java.awt.GridBagLayout());

        jpCalEscalaY.setMaximumSize(new java.awt.Dimension(2147483647, 250));
        jpCalEscalaY.setMinimumSize(new java.awt.Dimension(11, 36));
        jpCalEscalaY.setPreferredSize(new java.awt.Dimension(150, 250));
        jlCEY1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlCEY1.setText("Clique e arraste o mouse");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY1, gridBagConstraints);

        jlCEY2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlCEY2.setText("na imagem e entre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY2, gridBagConstraints);

        jlCEY3.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlCEY3.setText("com o valor medido,");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY3, gridBagConstraints);

        jlCEY4.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlCEY4.setText("conforme unidade em");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY4, gridBagConstraints);

        jlCEY5.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlCEY5.setText("Dados -> Prefer\u00eancias,");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY5, gridBagConstraints);

        jlCEY6.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12));
        jlCEY6.setText("p/ definir a escala-Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY6, gridBagConstraints);

        jlCEY7.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlCEY7.setText("para esta imagem SAPO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jpCalEscalaY.add(jlCEY7, gridBagConstraints);

        jpnCEY.setLayout(new java.awt.GridBagLayout());

        jpnCEY.setOpaque(false);
        jlCEYX.setText("X");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jpnCEY.add(jlCEYX, gridBagConstraints);

        jlCEYY.setText("Y");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jpnCEY.add(jlCEYY, gridBagConstraints);

        jlCEYX1.setFont(new java.awt.Font("Dialog", 0, 11));
        jlCEYX1.setText("  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jpnCEY.add(jlCEYX1, gridBagConstraints);

        jlCEYY1.setFont(new java.awt.Font("Dialog", 0, 11));
        jlCEYY1.setText("  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jpnCEY.add(jlCEYY1, gridBagConstraints);

        jlCEYX2.setFont(new java.awt.Font("Dialog", 0, 11));
        jlCEYX2.setText("  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jpnCEY.add(jlCEYX2, gridBagConstraints);

        jlCEYY2.setFont(new java.awt.Font("Dialog", 0, 11));
        jlCEYY2.setText("  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jpnCEY.add(jlCEYY2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        jpCalEscalaY.add(jpnCEY, gridBagConstraints);

        jtfEY.setMinimumSize(new java.awt.Dimension(72, 21));
        jtfEY.setPreferredSize(new java.awt.Dimension(72, 21));
        jtfEY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEYActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        jpCalEscalaY.add(jtfEY, gridBagConstraints);

        jbCEYAplicar.setFont(new java.awt.Font("MS Sans Serif", 0, 12));
        jbCEYAplicar.setText("Aplicar");
        jbCEYAplicar.setToolTipText("Escreve escala Y na base de dados do projeto e encerra esta opera\u00e7\u00e3o");
        jbCEYAplicar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCEYAplicar.setMargin(new java.awt.Insets(0, 7, 0, 7));
        jbCEYAplicar.setMaximumSize(new java.awt.Dimension(72, 23));
        jbCEYAplicar.setMinimumSize(new java.awt.Dimension(72, 23));
        jbCEYAplicar.setPreferredSize(new java.awt.Dimension(72, 23));
        jbCEYAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCEYAplicarActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 3, 6);
        jpCalEscalaY.add(jbCEYAplicar, gridBagConstraints);

        jlCEY8.setFont(new java.awt.Font("MS Sans Serif", 0, 10));
        jlCEY8.setForeground(new java.awt.Color(0, 102, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        jpCalEscalaY.add(jlCEY8, gridBagConstraints);

        jbCEYClear.setFont(new java.awt.Font("MS Sans Serif", 0, 12));
        jbCEYClear.setText("Limpar");
        jbCEYClear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCEYClear.setMargin(new java.awt.Insets(0, 7, 0, 7));
        jbCEYClear.setMaximumSize(new java.awt.Dimension(72, 23));
        jbCEYClear.setMinimumSize(new java.awt.Dimension(72, 23));
        jbCEYClear.setPreferredSize(new java.awt.Dimension(72, 23));
        jbCEYClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCEYClearActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 3, 6);
        jpCalEscalaY.add(jbCEYClear, gridBagConstraints);

        jbCEYOk.setFont(new java.awt.Font("MS Sans Serif", 0, 12));
        jbCEYOk.setText("Voltar");
        jbCEYOk.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCEYOk.setMargin(new java.awt.Insets(0, 7, 0, 7));
        jbCEYOk.setMaximumSize(new java.awt.Dimension(72, 23));
        jbCEYOk.setMinimumSize(new java.awt.Dimension(72, 23));
        jbCEYOk.setPreferredSize(new java.awt.Dimension(72, 23));
        jbCEYOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCEYOkActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 3, 6);
        jpCalEscalaY.add(jbCEYOk, gridBagConstraints);

        jbCEYAjuda.setFont(new java.awt.Font("MS Sans Serif", 0, 12));
        jbCEYAjuda.setText("Ajuda");
        jbCEYAjuda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCEYAjuda.setMargin(new java.awt.Insets(0, 7, 0, 7));
        jbCEYAjuda.setMaximumSize(new java.awt.Dimension(72, 23));
        jbCEYAjuda.setMinimumSize(new java.awt.Dimension(72, 23));
        jbCEYAjuda.setPreferredSize(new java.awt.Dimension(72, 23));
        jbCEYAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCEYAjudaActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 3, 6);
        jpCalEscalaY.add(jbCEYAjuda, gridBagConstraints);

        add(jpCalEscalaY, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jbCEYAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCEYAjudaActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jbCEYAjudaActionPerformed

    private void jbCEYOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCEYOkActionPerformed
        sapo.inserePainelEmInternalFrame(sapo.jpCalEscala, "WEST");
    }//GEN-LAST:event_jbCEYOkActionPerformed

    private void jbCEYClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCEYClearActionPerformed
        limpar();
    }//GEN-LAST:event_jbCEYClearActionPerformed

    private void jtfEYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEYActionPerformed
        if(sapo.isNumber(jtfEY.getText())) aplicaEscalaY();
    }//GEN-LAST:event_jtfEYActionPerformed

    private void jbCEYAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCEYAplicarActionPerformed
        if(sapo.isNumber(jtfEY.getText())) aplicaEscalaY();
    }//GEN-LAST:event_jbCEYAplicarActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCEYAjuda;
    private javax.swing.JButton jbCEYAplicar;
    private javax.swing.JButton jbCEYClear;
    private javax.swing.JButton jbCEYOk;
    private javax.swing.JLabel jlCEY1;
    private javax.swing.JLabel jlCEY2;
    private javax.swing.JLabel jlCEY3;
    private javax.swing.JLabel jlCEY4;
    private javax.swing.JLabel jlCEY5;
    private javax.swing.JLabel jlCEY6;
    private javax.swing.JLabel jlCEY7;
    private javax.swing.JLabel jlCEY8;
    private javax.swing.JLabel jlCEYX;
    public javax.swing.JLabel jlCEYX1;
    public javax.swing.JLabel jlCEYX2;
    private javax.swing.JLabel jlCEYY;
    public javax.swing.JLabel jlCEYY1;
    public javax.swing.JLabel jlCEYY2;
    private javax.swing.JPanel jpCalEscalaY;
    private javax.swing.JPanel jpnCEY;
    private javax.swing.JTextField jtfEY;
    // End of variables declaration//GEN-END:variables
    
}
